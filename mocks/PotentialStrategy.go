// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	indicator "github.com/evsamsonov/trading-indicators"
	mock "github.com/stretchr/testify/mock"
)

// PotentialStrategy is an autogenerated mock type for the PotentialStrategy type
type PotentialStrategy struct {
	mock.Mock
}

// init provides a mock function with given fields: candle, atr
func (_m *PotentialStrategy) Init(candle *indicator.Candle, atr float64) {
	_m.Called(candle, atr)
}

// isFinish provides a mock function with given fields: candle, atr
func (_m *PotentialStrategy) IsFinish(candle *indicator.Candle, atr float64) bool {
	ret := _m.Called(candle, atr)

	var r0 bool
	if rf, ok := ret.Get(0).(func(*indicator.Candle, float64) bool); ok {
		r0 = rf(candle, atr)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// potential provides a mock function with given fields:
func (_m *PotentialStrategy) Potential() float64 {
	ret := _m.Called()

	var r0 float64
	if rf, ok := ret.Get(0).(func() float64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(float64)
	}

	return r0
}

// process provides a mock function with given fields: candle
func (_m *PotentialStrategy) Process(candle *indicator.Candle) {
	_m.Called(candle)
}
